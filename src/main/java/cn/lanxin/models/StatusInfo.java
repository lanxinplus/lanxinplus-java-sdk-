/*
 * LanXin+ OpenAPI
 * LanXin+ OpenAPI Platform
 *
 * 
 *
 * NOTE: This class is auto generated by LanXin+(https://openapi.lanxin.cn).
 * https://openapi.lanxin.cn
 * Do not edit the class manually.
 */


package cn.lanxin.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * StatusInfo
 */

public class StatusInfo {
  public static final String SERIALIZED_NAME_BASE_VERSION = "baseVersion";
  @SerializedName(SERIALIZED_NAME_BASE_VERSION)
  private String baseVersion;

  public static final String SERIALIZED_NAME_NO_DISTURB = "noDisturb";
  @SerializedName(SERIALIZED_NAME_NO_DISTURB)
  private String noDisturb;

  public static final String SERIALIZED_NAME_UNREAD_COUNT = "unreadCount";
  @SerializedName(SERIALIZED_NAME_UNREAD_COUNT)
  private Integer unreadCount;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private String uuid;


  public StatusInfo baseVersion(String baseVersion) {
    
    this.baseVersion = baseVersion;
    return this;
  }

   /**
   * 保证每次请求时，该值递增。该值由应用服务端维护
   * @return baseVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "保证每次请求时，该值递增。该值由应用服务端维护")

  public String getBaseVersion() {
    return baseVersion;
  }


  public void setBaseVersion(String baseVersion) {
    this.baseVersion = baseVersion;
  }


  public StatusInfo noDisturb(String noDisturb) {
    
    this.noDisturb = noDisturb;
    return this;
  }

   /**
   * 免打扰标识。\&quot;true\&quot;:开启免打扰功能，\&quot;false\&quot;:关闭免打扰功能。注：noDistrub和unreadCount为互斥项，只能同时出现一个
   * @return noDisturb
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "免打扰标识。\"true\":开启免打扰功能，\"false\":关闭免打扰功能。注：noDistrub和unreadCount为互斥项，只能同时出现一个")

  public String getNoDisturb() {
    return noDisturb;
  }


  public void setNoDisturb(String noDisturb) {
    this.noDisturb = noDisturb;
  }


  public StatusInfo unreadCount(Integer unreadCount) {
    
    this.unreadCount = unreadCount;
    return this;
  }

   /**
   * 会话未读数。注：noDistrub和unreadCount为互斥项，只能同时出现一个
   * @return unreadCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "会话未读数。注：noDistrub和unreadCount为互斥项，只能同时出现一个")

  public Integer getUnreadCount() {
    return unreadCount;
  }


  public void setUnreadCount(Integer unreadCount) {
    this.unreadCount = unreadCount;
  }


  public StatusInfo userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * 通知会话所有者，通知的peerId就是通知应用的appId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "通知会话所有者，通知的peerId就是通知应用的appId")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public StatusInfo uuid(String uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * 一个随机字符串(uuid)
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "一个随机字符串(uuid)")

  public String getUuid() {
    return uuid;
  }


  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatusInfo statusInfo = (StatusInfo) o;
    return Objects.equals(this.baseVersion, statusInfo.baseVersion) &&
        Objects.equals(this.noDisturb, statusInfo.noDisturb) &&
        Objects.equals(this.unreadCount, statusInfo.unreadCount) &&
        Objects.equals(this.userId, statusInfo.userId) &&
        Objects.equals(this.uuid, statusInfo.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseVersion, noDisturb, unreadCount, userId, uuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatusInfo {\n");
    sb.append("    baseVersion: ").append(toIndentedString(baseVersion)).append("\n");
    sb.append("    noDisturb: ").append(toIndentedString(noDisturb)).append("\n");
    sb.append("    unreadCount: ").append(toIndentedString(unreadCount)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

