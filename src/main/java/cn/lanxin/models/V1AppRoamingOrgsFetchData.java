/*
 * LanXin+ OpenAPI
 * LanXin+ OpenAPI Platform
 *
 * 
 *
 * NOTE: This class is auto generated by LanXin+(https://openapi.lanxin.cn).
 * https://openapi.lanxin.cn
 * Do not edit the class manually.
 */


package cn.lanxin.models;

import java.util.Objects;
import java.util.Arrays;
import cn.lanxin.models.AppRoamingOrgList;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * V1AppRoamingOrgsFetchData
 */

public class V1AppRoamingOrgsFetchData {
  public static final String SERIALIZED_NAME_HAS_MORE = "hasMore";
  @SerializedName(SERIALIZED_NAME_HAS_MORE)
  private Boolean hasMore;

  public static final String SERIALIZED_NAME_LATEST_VERSION = "latestVersion";
  @SerializedName(SERIALIZED_NAME_LATEST_VERSION)
  private String latestVersion;

  public static final String SERIALIZED_NAME_ORG_LIST = "orgList";
  @SerializedName(SERIALIZED_NAME_ORG_LIST)
  private List<AppRoamingOrgList> orgList = null;


  public V1AppRoamingOrgsFetchData hasMore(Boolean hasMore) {
    
    this.hasMore = hasMore;
    return this;
  }

   /**
   * 是否还有下一页数据，有-true，没有-false。
   * @return hasMore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "是否还有下一页数据，有-true，没有-false。")

  public Boolean getHasMore() {
    return hasMore;
  }


  public void setHasMore(Boolean hasMore) {
    this.hasMore = hasMore;
  }


  public V1AppRoamingOrgsFetchData latestVersion(String latestVersion) {
    
    this.latestVersion = latestVersion;
    return this;
  }

   /**
   * 返回数据集所包含的数据中最新的版本号，是一个时间戳字符串，单位：微秒，请求下一页时可以此值作为base_version传入。调用者需要保存该版本号到本地，下次增量请求数据时作为base_version传递到服务端。
   * @return latestVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "返回数据集所包含的数据中最新的版本号，是一个时间戳字符串，单位：微秒，请求下一页时可以此值作为base_version传入。调用者需要保存该版本号到本地，下次增量请求数据时作为base_version传递到服务端。")

  public String getLatestVersion() {
    return latestVersion;
  }


  public void setLatestVersion(String latestVersion) {
    this.latestVersion = latestVersion;
  }


  public V1AppRoamingOrgsFetchData orgList(List<AppRoamingOrgList> orgList) {
    
    this.orgList = orgList;
    return this;
  }

  public V1AppRoamingOrgsFetchData addOrgListItem(AppRoamingOrgList orgListItem) {
    if (this.orgList == null) {
      this.orgList = new ArrayList<AppRoamingOrgList>();
    }
    this.orgList.add(orgListItem);
    return this;
  }

   /**
   * Get orgList
   * @return orgList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AppRoamingOrgList> getOrgList() {
    return orgList;
  }


  public void setOrgList(List<AppRoamingOrgList> orgList) {
    this.orgList = orgList;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1AppRoamingOrgsFetchData v1AppRoamingOrgsFetchData = (V1AppRoamingOrgsFetchData) o;
    return Objects.equals(this.hasMore, v1AppRoamingOrgsFetchData.hasMore) &&
        Objects.equals(this.latestVersion, v1AppRoamingOrgsFetchData.latestVersion) &&
        Objects.equals(this.orgList, v1AppRoamingOrgsFetchData.orgList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hasMore, latestVersion, orgList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1AppRoamingOrgsFetchData {\n");
    sb.append("    hasMore: ").append(toIndentedString(hasMore)).append("\n");
    sb.append("    latestVersion: ").append(toIndentedString(latestVersion)).append("\n");
    sb.append("    orgList: ").append(toIndentedString(orgList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

