/*
 * LanXin+ OpenAPI
 * LanXin+ OpenAPI Platform
 *
 * 
 *
 * NOTE: This class is auto generated by LanXin+(https://openapi.lanxin.cn).
 * https://openapi.lanxin.cn
 * Do not edit the class manually.
 */


package cn.lanxin.models;

import java.util.Objects;
import java.util.Arrays;
import cn.lanxin.models.Department;
import cn.lanxin.models.MobilePhone;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * V1UsersFetchData
 */

public class V1UsersFetchData {
  public static final String SERIALIZED_NAME_AVATAR_ID = "avatarId";
  @SerializedName(SERIALIZED_NAME_AVATAR_ID)
  private String avatarId;

  public static final String SERIALIZED_NAME_AVATAR_URL = "avatarUrl";
  @SerializedName(SERIALIZED_NAME_AVATAR_URL)
  private String avatarUrl;

  public static final String SERIALIZED_NAME_DEPARTMENT = "department";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT)
  private List<Department> department = null;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "employeeNumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private String employeeNumber;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "externalId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  public static final String SERIALIZED_NAME_LOGIN_NAME = "loginName";
  @SerializedName(SERIALIZED_NAME_LOGIN_NAME)
  private String loginName;

  public static final String SERIALIZED_NAME_MOBILE_PHONE = "mobilePhone";
  @SerializedName(SERIALIZED_NAME_MOBILE_PHONE)
  private MobilePhone mobilePhone;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ORG_ID = "orgId";
  @SerializedName(SERIALIZED_NAME_ORG_ID)
  private String orgId;

  public static final String SERIALIZED_NAME_ORG_NAME = "orgName";
  @SerializedName(SERIALIZED_NAME_ORG_NAME)
  private String orgName;

  public static final String SERIALIZED_NAME_STAFF_ID = "staffId";
  @SerializedName(SERIALIZED_NAME_STAFF_ID)
  private String staffId;


  public V1UsersFetchData avatarId(String avatarId) {
    
    this.avatarId = avatarId;
    return this;
  }

   /**
   * 头像ID
   * @return avatarId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "头像ID")

  public String getAvatarId() {
    return avatarId;
  }


  public void setAvatarId(String avatarId) {
    this.avatarId = avatarId;
  }


  public V1UsersFetchData avatarUrl(String avatarUrl) {
    
    this.avatarUrl = avatarUrl;
    return this;
  }

   /**
   * 头像地址
   * @return avatarUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "头像地址")

  public String getAvatarUrl() {
    return avatarUrl;
  }


  public void setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }


  public V1UsersFetchData department(List<Department> department) {
    
    this.department = department;
    return this;
  }

  public V1UsersFetchData addDepartmentItem(Department departmentItem) {
    if (this.department == null) {
      this.department = new ArrayList<Department>();
    }
    this.department.add(departmentItem);
    return this;
  }

   /**
   * 部门信息
   * @return department
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "部门信息")

  public List<Department> getDepartment() {
    return department;
  }


  public void setDepartment(List<Department> department) {
    this.department = department;
  }


  public V1UsersFetchData email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * 邮箱地址
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "邮箱地址")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public V1UsersFetchData employeeNumber(String employeeNumber) {
    
    this.employeeNumber = employeeNumber;
    return this;
  }

   /**
   * 员工号
   * @return employeeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "员工号")

  public String getEmployeeNumber() {
    return employeeNumber;
  }


  public void setEmployeeNumber(String employeeNumber) {
    this.employeeNumber = employeeNumber;
  }


  public V1UsersFetchData externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * 外部数据源人员唯一ID
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "外部数据源人员唯一ID")

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public V1UsersFetchData loginName(String loginName) {
    
    this.loginName = loginName;
    return this;
  }

   /**
   * 登录用户名
   * @return loginName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "登录用户名")

  public String getLoginName() {
    return loginName;
  }


  public void setLoginName(String loginName) {
    this.loginName = loginName;
  }


  public V1UsersFetchData mobilePhone(MobilePhone mobilePhone) {
    
    this.mobilePhone = mobilePhone;
    return this;
  }

   /**
   * Get mobilePhone
   * @return mobilePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public MobilePhone getMobilePhone() {
    return mobilePhone;
  }


  public void setMobilePhone(MobilePhone mobilePhone) {
    this.mobilePhone = mobilePhone;
  }


  public V1UsersFetchData name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * 人员名称
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "人员名称")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public V1UsersFetchData orgId(String orgId) {
    
    this.orgId = orgId;
    return this;
  }

   /**
   * 组织ID
   * @return orgId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "组织ID")

  public String getOrgId() {
    return orgId;
  }


  public void setOrgId(String orgId) {
    this.orgId = orgId;
  }


  public V1UsersFetchData orgName(String orgName) {
    
    this.orgName = orgName;
    return this;
  }

   /**
   * 组织名称
   * @return orgName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "组织名称")

  public String getOrgName() {
    return orgName;
  }


  public void setOrgName(String orgName) {
    this.orgName = orgName;
  }


  public V1UsersFetchData staffId(String staffId) {
    
    this.staffId = staffId;
    return this;
  }

   /**
   * 人员ID
   * @return staffId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "人员ID")

  public String getStaffId() {
    return staffId;
  }


  public void setStaffId(String staffId) {
    this.staffId = staffId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1UsersFetchData v1UsersFetchData = (V1UsersFetchData) o;
    return Objects.equals(this.avatarId, v1UsersFetchData.avatarId) &&
        Objects.equals(this.avatarUrl, v1UsersFetchData.avatarUrl) &&
        Objects.equals(this.department, v1UsersFetchData.department) &&
        Objects.equals(this.email, v1UsersFetchData.email) &&
        Objects.equals(this.employeeNumber, v1UsersFetchData.employeeNumber) &&
        Objects.equals(this.externalId, v1UsersFetchData.externalId) &&
        Objects.equals(this.loginName, v1UsersFetchData.loginName) &&
        Objects.equals(this.mobilePhone, v1UsersFetchData.mobilePhone) &&
        Objects.equals(this.name, v1UsersFetchData.name) &&
        Objects.equals(this.orgId, v1UsersFetchData.orgId) &&
        Objects.equals(this.orgName, v1UsersFetchData.orgName) &&
        Objects.equals(this.staffId, v1UsersFetchData.staffId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(avatarId, avatarUrl, department, email, employeeNumber, externalId, loginName, mobilePhone, name, orgId, orgName, staffId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1UsersFetchData {\n");
    sb.append("    avatarId: ").append(toIndentedString(avatarId)).append("\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    loginName: ").append(toIndentedString(loginName)).append("\n");
    sb.append("    mobilePhone: ").append(toIndentedString(mobilePhone)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    orgName: ").append(toIndentedString(orgName)).append("\n");
    sb.append("    staffId: ").append(toIndentedString(staffId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

