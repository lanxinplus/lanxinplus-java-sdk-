/*
 * LanXin+ OpenAPI
 * LanXin+ OpenAPI Platform
 *
 * 
 *
 * NOTE: This class is auto generated by LanXin+(https://openapi.lanxin.cn).
 * https://openapi.lanxin.cn
 * Do not edit the class manually.
 */


package cn.lanxin.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * V1UserTokenCreateData
 */

public class V1UserTokenCreateData {
  public static final String SERIALIZED_NAME_EXPIRES_IN = "expiresIn";
  @SerializedName(SERIALIZED_NAME_EXPIRES_IN)
  private Integer expiresIn;

  public static final String SERIALIZED_NAME_SCOPE = "scope";
  @SerializedName(SERIALIZED_NAME_SCOPE)
  private String scope;

  public static final String SERIALIZED_NAME_STAFF_ID = "staffId";
  @SerializedName(SERIALIZED_NAME_STAFF_ID)
  private String staffId;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_USER_TOKEN = "userToken";
  @SerializedName(SERIALIZED_NAME_USER_TOKEN)
  private String userToken;


  public V1UserTokenCreateData expiresIn(Integer expiresIn) {
    
    this.expiresIn = expiresIn;
    return this;
  }

   /**
   * Token 有效期（7200秒）
   * @return expiresIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Token 有效期（7200秒）")

  public Integer getExpiresIn() {
    return expiresIn;
  }


  public void setExpiresIn(Integer expiresIn) {
    this.expiresIn = expiresIn;
  }


  public V1UserTokenCreateData scope(String scope) {
    
    this.scope = scope;
    return this;
  }

   /**
   * 应用授权列表，多个授权请求需要以 scope&#x3D;\&quot;scope1,scope2\&quot; 形式。
   * @return scope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "应用授权列表，多个授权请求需要以 scope=\"scope1,scope2\" 形式。")

  public String getScope() {
    return scope;
  }


  public void setScope(String scope) {
    this.scope = scope;
  }


  public V1UserTokenCreateData staffId(String staffId) {
    
    this.staffId = staffId;
    return this;
  }

   /**
   * 人员ID
   * @return staffId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "人员ID")

  public String getStaffId() {
    return staffId;
  }


  public void setStaffId(String staffId) {
    this.staffId = staffId;
  }


  public V1UserTokenCreateData state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * 发起请求的时候携带的随机值，和该重定向请求唯一对应。同时，也能 按 OAUTH2 协议防止 CSRF 攻击
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "发起请求的时候携带的随机值，和该重定向请求唯一对应。同时，也能 按 OAUTH2 协议防止 CSRF 攻击")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }


  public V1UserTokenCreateData userToken(String userToken) {
    
    this.userToken = userToken;
    return this;
  }

   /**
   * 人员 Token
   * @return userToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "人员 Token")

  public String getUserToken() {
    return userToken;
  }


  public void setUserToken(String userToken) {
    this.userToken = userToken;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1UserTokenCreateData v1UserTokenCreateData = (V1UserTokenCreateData) o;
    return Objects.equals(this.expiresIn, v1UserTokenCreateData.expiresIn) &&
        Objects.equals(this.scope, v1UserTokenCreateData.scope) &&
        Objects.equals(this.staffId, v1UserTokenCreateData.staffId) &&
        Objects.equals(this.state, v1UserTokenCreateData.state) &&
        Objects.equals(this.userToken, v1UserTokenCreateData.userToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expiresIn, scope, staffId, state, userToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1UserTokenCreateData {\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    staffId: ").append(toIndentedString(staffId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    userToken: ").append(toIndentedString(userToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

