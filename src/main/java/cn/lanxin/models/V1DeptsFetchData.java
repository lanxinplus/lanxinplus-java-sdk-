/*
 * LanXin+ OpenAPI
 * LanXin+ OpenAPI Platform
 *
 * 
 *
 * NOTE: This class is auto generated by LanXin+(https://openapi.lanxin.cn).
 * https://openapi.lanxin.cn
 * Do not edit the class manually.
 */


package cn.lanxin.models;

import java.util.Objects;
import java.util.Arrays;
import cn.lanxin.models.Department;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * V1DeptsFetchData
 */

public class V1DeptsFetchData {
  public static final String SERIALIZED_NAME_ANCESTOR_DEPARTMENTS = "ancestorDepartments";
  @SerializedName(SERIALIZED_NAME_ANCESTOR_DEPARTMENTS)
  private List<Department> ancestorDepartments = null;

  public static final String SERIALIZED_NAME_DELETED_MEMBERS = "deletedMembers";
  @SerializedName(SERIALIZED_NAME_DELETED_MEMBERS)
  private Integer deletedMembers;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "externalId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  public static final String SERIALIZED_NAME_FROZEN_MEMBERS = "frozenMembers";
  @SerializedName(SERIALIZED_NAME_FROZEN_MEMBERS)
  private Integer frozenMembers;

  public static final String SERIALIZED_NAME_HAS_CHILDREN = "hasChildren";
  @SerializedName(SERIALIZED_NAME_HAS_CHILDREN)
  private Boolean hasChildren;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INACTIVE_MEMBERS = "inactiveMembers";
  @SerializedName(SERIALIZED_NAME_INACTIVE_MEMBERS)
  private Integer inactiveMembers;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NORMAL_MEMBERS = "normalMembers";
  @SerializedName(SERIALIZED_NAME_NORMAL_MEMBERS)
  private Integer normalMembers;

  public static final String SERIALIZED_NAME_ORDER = "order";
  @SerializedName(SERIALIZED_NAME_ORDER)
  private BigDecimal order;

  public static final String SERIALIZED_NAME_PARENT_ID = "parentId";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private String parentId;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;


  public V1DeptsFetchData ancestorDepartments(List<Department> ancestorDepartments) {
    
    this.ancestorDepartments = ancestorDepartments;
    return this;
  }

  public V1DeptsFetchData addAncestorDepartmentsItem(Department ancestorDepartmentsItem) {
    if (this.ancestorDepartments == null) {
      this.ancestorDepartments = new ArrayList<Department>();
    }
    this.ancestorDepartments.add(ancestorDepartmentsItem);
    return this;
  }

   /**
   * 部门祖先列表
   * @return ancestorDepartments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "部门祖先列表")

  public List<Department> getAncestorDepartments() {
    return ancestorDepartments;
  }


  public void setAncestorDepartments(List<Department> ancestorDepartments) {
    this.ancestorDepartments = ancestorDepartments;
  }


  public V1DeptsFetchData deletedMembers(Integer deletedMembers) {
    
    this.deletedMembers = deletedMembers;
    return this;
  }

   /**
   * 已删除
   * @return deletedMembers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "已删除")

  public Integer getDeletedMembers() {
    return deletedMembers;
  }


  public void setDeletedMembers(Integer deletedMembers) {
    this.deletedMembers = deletedMembers;
  }


  public V1DeptsFetchData externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * 分支外部ID
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "分支外部ID")

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public V1DeptsFetchData frozenMembers(Integer frozenMembers) {
    
    this.frozenMembers = frozenMembers;
    return this;
  }

   /**
   * 已冻结
   * @return frozenMembers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "已冻结")

  public Integer getFrozenMembers() {
    return frozenMembers;
  }


  public void setFrozenMembers(Integer frozenMembers) {
    this.frozenMembers = frozenMembers;
  }


  public V1DeptsFetchData hasChildren(Boolean hasChildren) {
    
    this.hasChildren = hasChildren;
    return this;
  }

   /**
   * 是否有子分支
   * @return hasChildren
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "是否有子分支")

  public Boolean getHasChildren() {
    return hasChildren;
  }


  public void setHasChildren(Boolean hasChildren) {
    this.hasChildren = hasChildren;
  }


  public V1DeptsFetchData id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 当前Id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "当前Id")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public V1DeptsFetchData inactiveMembers(Integer inactiveMembers) {
    
    this.inactiveMembers = inactiveMembers;
    return this;
  }

   /**
   * 未注册
   * @return inactiveMembers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "未注册")

  public Integer getInactiveMembers() {
    return inactiveMembers;
  }


  public void setInactiveMembers(Integer inactiveMembers) {
    this.inactiveMembers = inactiveMembers;
  }


  public V1DeptsFetchData name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * 分支名称
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "分支名称")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public V1DeptsFetchData normalMembers(Integer normalMembers) {
    
    this.normalMembers = normalMembers;
    return this;
  }

   /**
   * 已注册
   * @return normalMembers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "已注册")

  public Integer getNormalMembers() {
    return normalMembers;
  }


  public void setNormalMembers(Integer normalMembers) {
    this.normalMembers = normalMembers;
  }


  public V1DeptsFetchData order(BigDecimal order) {
    
    this.order = order;
    return this;
  }

   /**
   * 分支顺序，越小排在越前面
   * @return order
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "分支顺序，越小排在越前面")

  public BigDecimal getOrder() {
    return order;
  }


  public void setOrder(BigDecimal order) {
    this.order = order;
  }


  public V1DeptsFetchData parentId(String parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * 父Id
   * @return parentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "父Id")

  public String getParentId() {
    return parentId;
  }


  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


  public V1DeptsFetchData tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public V1DeptsFetchData addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * 该分支所持有的全部标签ID列表
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "该分支所持有的全部标签ID列表")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1DeptsFetchData v1DeptsFetchData = (V1DeptsFetchData) o;
    return Objects.equals(this.ancestorDepartments, v1DeptsFetchData.ancestorDepartments) &&
        Objects.equals(this.deletedMembers, v1DeptsFetchData.deletedMembers) &&
        Objects.equals(this.externalId, v1DeptsFetchData.externalId) &&
        Objects.equals(this.frozenMembers, v1DeptsFetchData.frozenMembers) &&
        Objects.equals(this.hasChildren, v1DeptsFetchData.hasChildren) &&
        Objects.equals(this.id, v1DeptsFetchData.id) &&
        Objects.equals(this.inactiveMembers, v1DeptsFetchData.inactiveMembers) &&
        Objects.equals(this.name, v1DeptsFetchData.name) &&
        Objects.equals(this.normalMembers, v1DeptsFetchData.normalMembers) &&
        Objects.equals(this.order, v1DeptsFetchData.order) &&
        Objects.equals(this.parentId, v1DeptsFetchData.parentId) &&
        Objects.equals(this.tags, v1DeptsFetchData.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ancestorDepartments, deletedMembers, externalId, frozenMembers, hasChildren, id, inactiveMembers, name, normalMembers, order, parentId, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1DeptsFetchData {\n");
    sb.append("    ancestorDepartments: ").append(toIndentedString(ancestorDepartments)).append("\n");
    sb.append("    deletedMembers: ").append(toIndentedString(deletedMembers)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    frozenMembers: ").append(toIndentedString(frozenMembers)).append("\n");
    sb.append("    hasChildren: ").append(toIndentedString(hasChildren)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inactiveMembers: ").append(toIndentedString(inactiveMembers)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    normalMembers: ").append(toIndentedString(normalMembers)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

