/*
 * LanXin+ OpenAPI
 * LanXin+ OpenAPI Platform
 *
 * 
 *
 * NOTE: This class is auto generated by LanXin+(https://openapi.lanxin.cn).
 * https://openapi.lanxin.cn
 * Do not edit the class manually.
 */


package cn.lanxin.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PushData
 */

public class PushData {
  public static final String SERIALIZED_NAME_ANDROID_SOUND_URL = "androidSoundUrl";
  @SerializedName(SERIALIZED_NAME_ANDROID_SOUND_URL)
  private String androidSoundUrl;

  public static final String SERIALIZED_NAME_APP_TYPE = "appType";
  @SerializedName(SERIALIZED_NAME_APP_TYPE)
  private String appType;

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private String content;

  public static final String SERIALIZED_NAME_IOS_SOUND_URL = "iosSoundUrl";
  @SerializedName(SERIALIZED_NAME_IOS_SOUND_URL)
  private String iosSoundUrl;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;


  public PushData androidSoundUrl(String androidSoundUrl) {
    
    this.androidSoundUrl = androidSoundUrl;
    return this;
  }

   /**
   * 安卓端个性化铃声
   * @return androidSoundUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "安卓端个性化铃声")

  public String getAndroidSoundUrl() {
    return androidSoundUrl;
  }


  public void setAndroidSoundUrl(String androidSoundUrl) {
    this.androidSoundUrl = androidSoundUrl;
  }


  public PushData appType(String appType) {
    
    this.appType = appType;
    return this;
  }

   /**
   * 通知栏消息拉起应用时用的应用类型：“webview”， “net_meeting”， “security_mail”， “blueprint”
   * @return appType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "通知栏消息拉起应用时用的应用类型：“webview”， “net_meeting”， “security_mail”， “blueprint”")

  public String getAppType() {
    return appType;
  }


  public void setAppType(String appType) {
    this.appType = appType;
  }


  public PushData content(String content) {
    
    this.content = content;
    return this;
  }

   /**
   * 通知消息内容
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "通知消息内容")

  public String getContent() {
    return content;
  }


  public void setContent(String content) {
    this.content = content;
  }


  public PushData iosSoundUrl(String iosSoundUrl) {
    
    this.iosSoundUrl = iosSoundUrl;
    return this;
  }

   /**
   * ios端个性化铃声
   * @return iosSoundUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ios端个性化铃声")

  public String getIosSoundUrl() {
    return iosSoundUrl;
  }


  public void setIosSoundUrl(String iosSoundUrl) {
    this.iosSoundUrl = iosSoundUrl;
  }


  public PushData title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * 通知消息标题，为空时取应用名称
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "通知消息标题，为空时取应用名称")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public PushData url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * 应用详情页跳转地址，用于通过推送消息拉起应用时透传给应用 。如果不需要，可以为空。
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "应用详情页跳转地址，用于通过推送消息拉起应用时透传给应用 。如果不需要，可以为空。")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PushData pushData = (PushData) o;
    return Objects.equals(this.androidSoundUrl, pushData.androidSoundUrl) &&
        Objects.equals(this.appType, pushData.appType) &&
        Objects.equals(this.content, pushData.content) &&
        Objects.equals(this.iosSoundUrl, pushData.iosSoundUrl) &&
        Objects.equals(this.title, pushData.title) &&
        Objects.equals(this.url, pushData.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(androidSoundUrl, appType, content, iosSoundUrl, title, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PushData {\n");
    sb.append("    androidSoundUrl: ").append(toIndentedString(androidSoundUrl)).append("\n");
    sb.append("    appType: ").append(toIndentedString(appType)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    iosSoundUrl: ").append(toIndentedString(iosSoundUrl)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

