/*
 * LanXin+ OpenAPI
 * LanXin+ OpenAPI Platform
 *
 * 
 *
 * NOTE: This class is auto generated by LanXin+(https://openapi.lanxin.cn).
 * https://openapi.lanxin.cn
 * Do not edit the class manually.
 */


package cn.lanxin.api;

import cn.lanxin.ApiException;
import cn.lanxin.models.V1TagGroupsCreateRequestBody;
import cn.lanxin.models.V1TagGroupsCreateResponse;
import cn.lanxin.models.V1TagGroupsDeleteResponse;
import cn.lanxin.models.V1TagGroupsFetchRequestBody;
import cn.lanxin.models.V1TagGroupsFetchResponse;
import cn.lanxin.models.V1TagGroupsInfoFetchResponse;
import cn.lanxin.models.V1TagGroupsUpdateRequestBody;
import cn.lanxin.models.V1TagGroupsUpdateResponse;
import cn.lanxin.models.V1TagsCreateRequestBody;
import cn.lanxin.models.V1TagsCreateResponse;
import cn.lanxin.models.V1TagsDeleteResponse;
import cn.lanxin.models.V1TagsMetaFetchRequestBody;
import cn.lanxin.models.V1TagsMetaFetchResponse;
import cn.lanxin.models.V1TagsUpdateRequestBody;
import cn.lanxin.models.V1TagsUpdateResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AddrbkTagsApi
 */
@Ignore
public class AddrbkTagsApiTest {

    private final AddrbkTagsApi api = new AddrbkTagsApi();

    
    /**
     * 创建标签分组
     *
     * 创建标签分组
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TagGroupsCreateTest() throws ApiException {
        String appToken = null;
        V1TagGroupsCreateRequestBody v1TagGroupsCreateRequestBody = null;
        String userToken = null;
        V1TagGroupsCreateResponse response = api.v1TagGroupsCreate(appToken, v1TagGroupsCreateRequestBody, userToken);

        // TODO: test validations
    }
    
    /**
     * 删除标签分组
     *
     * 删除标签分组
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TagGroupsDeleteTest() throws ApiException {
        String appToken = null;
        String tagGroupId = null;
        String userToken = null;
        V1TagGroupsDeleteResponse response = api.v1TagGroupsDelete(appToken, tagGroupId, userToken);

        // TODO: test validations
    }
    
    /**
     * 获取标签分组列表
     *
     * 获取标签分组列表
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TagGroupsFetchTest() throws ApiException {
        String appToken = null;
        V1TagGroupsFetchRequestBody v1TagGroupsFetchRequestBody = null;
        String userToken = null;
        V1TagGroupsFetchResponse response = api.v1TagGroupsFetch(appToken, v1TagGroupsFetchRequestBody, userToken);

        // TODO: test validations
    }
    
    /**
     * 获取标签分组详情
     *
     * 获取标签分组详情
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TagGroupsInfoFetchTest() throws ApiException {
        String appToken = null;
        String tagGroupId = null;
        String userToken = null;
        V1TagGroupsInfoFetchResponse response = api.v1TagGroupsInfoFetch(appToken, tagGroupId, userToken);

        // TODO: test validations
    }
    
    /**
     * 修改标签分组
     *
     * 修改标签分组
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TagGroupsUpdateTest() throws ApiException {
        String appToken = null;
        String tagGroupId = null;
        V1TagGroupsUpdateRequestBody v1TagGroupsUpdateRequestBody = null;
        String userToken = null;
        V1TagGroupsUpdateResponse response = api.v1TagGroupsUpdate(appToken, tagGroupId, v1TagGroupsUpdateRequestBody, userToken);

        // TODO: test validations
    }
    
    /**
     * 创建标签
     *
     * 创建标签
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TagsCreateTest() throws ApiException {
        String appToken = null;
        V1TagsCreateRequestBody v1TagsCreateRequestBody = null;
        String userToken = null;
        V1TagsCreateResponse response = api.v1TagsCreate(appToken, v1TagsCreateRequestBody, userToken);

        // TODO: test validations
    }
    
    /**
     * 删除标签
     *
     * 删除标签
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TagsDeleteTest() throws ApiException {
        String appToken = null;
        String tagid = null;
        String userToken = null;
        V1TagsDeleteResponse response = api.v1TagsDelete(appToken, tagid, userToken);

        // TODO: test validations
    }
    
    /**
     * 获取标签详情
     *
     * 获取标签详情
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TagsMetaFetchTest() throws ApiException {
        String appToken = null;
        V1TagsMetaFetchRequestBody v1TagsMetaFetchRequestBody = null;
        String userToken = null;
        V1TagsMetaFetchResponse response = api.v1TagsMetaFetch(appToken, v1TagsMetaFetchRequestBody, userToken);

        // TODO: test validations
    }
    
    /**
     * 修改标签
     *
     * 修改标签
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TagsUpdateTest() throws ApiException {
        String appToken = null;
        String tagid = null;
        V1TagsUpdateRequestBody v1TagsUpdateRequestBody = null;
        String userToken = null;
        V1TagsUpdateResponse response = api.v1TagsUpdate(appToken, tagid, v1TagsUpdateRequestBody, userToken);

        // TODO: test validations
    }
    
}
