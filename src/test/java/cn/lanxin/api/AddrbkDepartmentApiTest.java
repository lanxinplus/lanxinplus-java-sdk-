/*
 * LanXin+ OpenAPI
 * LanXin+ OpenAPI Platform
 *
 * 
 *
 * NOTE: This class is auto generated by LanXin+(https://openapi.lanxin.cn).
 * https://openapi.lanxin.cn
 * Do not edit the class manually.
 */


package cn.lanxin.api;

import cn.lanxin.ApiException;
import cn.lanxin.models.V1DeptsChildrenFetchResponse;
import cn.lanxin.models.V1DeptsCreateRequestBody;
import cn.lanxin.models.V1DeptsCreateResponse;
import cn.lanxin.models.V1DeptsDeleteResponse;
import cn.lanxin.models.V1DeptsFetchResponse;
import cn.lanxin.models.V1DeptsStaffsCreateResponse;
import cn.lanxin.models.V1DeptsStaffsDeleteResponse;
import cn.lanxin.models.V1DeptsStaffsFetchResponse;
import cn.lanxin.models.V1DeptsUpdateRequestBody;
import cn.lanxin.models.V1DeptsUpdateResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AddrbkDepartmentApi
 */
@Ignore
public class AddrbkDepartmentApiTest {

    private final AddrbkDepartmentApi api = new AddrbkDepartmentApi();

    
    /**
     * 获取子分支列表
     *
     * 获取子分支列表，只获取一层
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1DeptsChildrenFetchTest() throws ApiException {
        String appToken = null;
        String departmentid = null;
        String userToken = null;
        V1DeptsChildrenFetchResponse response = api.v1DeptsChildrenFetch(appToken, departmentid, userToken);

        // TODO: test validations
    }
    
    /**
     * 创建分支
     *
     * 创建分支。接口需要拥有对应的授权。仅组织内应用经过授权可以调用该接口
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1DeptsCreateTest() throws ApiException {
        String appToken = null;
        V1DeptsCreateRequestBody v1DeptsCreateRequestBody = null;
        String userToken = null;
        V1DeptsCreateResponse response = api.v1DeptsCreate(appToken, v1DeptsCreateRequestBody, userToken);

        // TODO: test validations
    }
    
    /**
     * 删除分支
     *
     * 删除分支，仅组织内应用经过授权可以调用该接口
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1DeptsDeleteTest() throws ApiException {
        String appToken = null;
        String departmentid = null;
        String userToken = null;
        V1DeptsDeleteResponse response = api.v1DeptsDelete(appToken, departmentid, userToken);

        // TODO: test validations
    }
    
    /**
     * 获取分支详情
     *
     * 获取分支详情信息
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1DeptsFetchTest() throws ApiException {
        String appToken = null;
        String departmentid = null;
        String userToken = null;
        V1DeptsFetchResponse response = api.v1DeptsFetch(appToken, departmentid, userToken);

        // TODO: test validations
    }
    
    /**
     * 添加分支成员
     *
     * 为指定分支添加成员
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1DeptsStaffsCreateTest() throws ApiException {
        String appToken = null;
        String departmentid = null;
        String staffid = null;
        String userToken = null;
        V1DeptsStaffsCreateResponse response = api.v1DeptsStaffsCreate(appToken, departmentid, staffid, userToken);

        // TODO: test validations
    }
    
    /**
     * 删除分支成员
     *
     * 删除分支成员，仅组织内应用经过授权可以调用该接口
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1DeptsStaffsDeleteTest() throws ApiException {
        String appToken = null;
        String departmentid = null;
        String staffid = null;
        String userToken = null;
        V1DeptsStaffsDeleteResponse response = api.v1DeptsStaffsDelete(appToken, departmentid, staffid, userToken);

        // TODO: test validations
    }
    
    /**
     * 获取分支成员列表
     *
     * 根据分支ID 获取分支成员列表，目前只返回当前分支下的成员，不含子分支的成员
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1DeptsStaffsFetchTest() throws ApiException {
        String appToken = null;
        String departmentid = null;
        String userToken = null;
        Integer page = null;
        Integer pageSize = null;
        V1DeptsStaffsFetchResponse response = api.v1DeptsStaffsFetch(appToken, departmentid, userToken, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * 更新分支
     *
     * 更新分支信息，接口需要拥有授权。仅组织内应用经过授权可以调用该接口
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1DeptsUpdateTest() throws ApiException {
        String appToken = null;
        String departmentid = null;
        V1DeptsUpdateRequestBody v1DeptsUpdateRequestBody = null;
        String userToken = null;
        V1DeptsUpdateResponse response = api.v1DeptsUpdate(appToken, departmentid, v1DeptsUpdateRequestBody, userToken);

        // TODO: test validations
    }
    
}
