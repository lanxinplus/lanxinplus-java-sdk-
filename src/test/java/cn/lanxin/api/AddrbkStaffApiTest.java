/*
 * LanXin+ OpenAPI
 * LanXin+ OpenAPI Platform
 *
 * 
 *
 * NOTE: This class is auto generated by LanXin+(https://openapi.lanxin.cn).
 * https://openapi.lanxin.cn
 * Do not edit the class manually.
 */


package cn.lanxin.api;

import cn.lanxin.ApiException;
import cn.lanxin.models.V1OrgExtraFieldIdsFetchResponse;
import cn.lanxin.models.V1StaffsCreateRequestBody;
import cn.lanxin.models.V1StaffsCreateResponse;
import cn.lanxin.models.V1StaffsDeleteResponse;
import cn.lanxin.models.V1StaffsDeptAncestorsFetchResponse;
import cn.lanxin.models.V1StaffsFetchResponse;
import cn.lanxin.models.V1StaffsInforFetchResponse;
import cn.lanxin.models.V1StaffsUpdateRequestBody;
import cn.lanxin.models.V1StaffsUpdateResponse;
import cn.lanxin.models.V1TagsFetchRequestBody;
import cn.lanxin.models.V1TagsFetchResponse;
import cn.lanxin.models.V2StaffsIdMappingFetchResponse;
import cn.lanxin.models.V2StaffsSearchRequestBody;
import cn.lanxin.models.V2StaffsSearchResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AddrbkStaffApi
 */
@Ignore
public class AddrbkStaffApiTest {

    private final AddrbkStaffApi api = new AddrbkStaffApi();

    
    /**
     * 获取人员信息扩展字段id列表
     *
     * 获取组织内人员信息的扩展字段ID列表
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1OrgExtraFieldIdsFetchTest() throws ApiException {
        String appToken = null;
        String orgid = null;
        String userToken = null;
        Integer page = null;
        Integer pageSize = null;
        V1OrgExtraFieldIdsFetchResponse response = api.v1OrgExtraFieldIdsFetch(appToken, orgid, userToken, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * 创建人员
     *
     * 通过此接口，可以创建人员。仅组织内应用经过授权可以调用该接口。 特别说明：目前蓝信不支持应用并发调用人员创建接口，否则会出现添加人员到部门的操作失败，应用需要保证串行化调用该接口
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1StaffsCreateTest() throws ApiException {
        String appToken = null;
        V1StaffsCreateRequestBody v1StaffsCreateRequestBody = null;
        String userToken = null;
        V1StaffsCreateResponse response = api.v1StaffsCreate(appToken, v1StaffsCreateRequestBody, userToken);

        // TODO: test validations
    }
    
    /**
     * 人员删除接口
     *
     * 通过此接口，删除人员
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1StaffsDeleteTest() throws ApiException {
        String appToken = null;
        String staffid = null;
        String userToken = null;
        V1StaffsDeleteResponse response = api.v1StaffsDelete(appToken, staffid, userToken);

        // TODO: test validations
    }
    
    /**
     * 获取人员分支祖先列表
     *
     * 获取某个人员所在的所有分支的祖先列表
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1StaffsDeptAncestorsFetchTest() throws ApiException {
        String appToken = null;
        String staffid = null;
        String userToken = null;
        V1StaffsDeptAncestorsFetchResponse response = api.v1StaffsDeptAncestorsFetch(appToken, staffid, userToken);

        // TODO: test validations
    }
    
    /**
     * 获取人员基本信息
     *
     * 可以获人员的基本信息
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1StaffsFetchTest() throws ApiException {
        String appToken = null;
        String staffid = null;
        String userToken = null;
        V1StaffsFetchResponse response = api.v1StaffsFetch(appToken, staffid, userToken);

        // TODO: test validations
    }
    
    /**
     * 获取人员详细信息
     *
     * 通过此接口，可以获取人员详细信息。需要组织授权或者个人授权
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1StaffsInforFetchTest() throws ApiException {
        String appToken = null;
        String staffid = null;
        String userToken = null;
        V1StaffsInforFetchResponse response = api.v1StaffsInforFetch(appToken, staffid, userToken);

        // TODO: test validations
    }
    
    /**
     * 更新人员
     *
     * 通过此接口，可以更新人员信息。仅组织内应用经过授权可以调用该接口。 特别说明：如果涉及人员的部门信息更新，目前蓝信不支持应用并发调用人员更新接口，否则会出现更新人员部门的操作失败，应用需要保证串行化调用该接口
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1StaffsUpdateTest() throws ApiException {
        String appToken = null;
        String staffid = null;
        V1StaffsUpdateRequestBody v1StaffsUpdateRequestBody = null;
        String userToken = null;
        V1StaffsUpdateResponse response = api.v1StaffsUpdate(appToken, staffid, v1StaffsUpdateRequestBody, userToken);

        // TODO: test validations
    }
    
    /**
     * 通过标签获取人员的id列表
     *
     * 在组织内，通过指定标签过滤规则来筛选目标人员。 EMC管理后台和开放平台接口都提供关于标签的创建、修改、删除、给人员添加标签等功能，开发人员可以调用开放平台接口获取到已创建的所有标签分组， 然后根据指定的分组ID再获取到该分组下的所有标签
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v1TagsFetchTest() throws ApiException {
        String appToken = null;
        V1TagsFetchRequestBody v1TagsFetchRequestBody = null;
        String userToken = null;
        Integer page = null;
        Integer pageSize = null;
        V1TagsFetchResponse response = api.v1TagsFetch(appToken, v1TagsFetchRequestBody, userToken, page, pageSize);

        // TODO: test validations
    }
    
    /**
     * 获取人员详细信息
     *
     * 通过此接口，可以获取人员详细信息。需要组织授权或者个人授权
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v2StaffsIdMappingFetchTest() throws ApiException {
        String appToken = null;
        String orgId = null;
        String idType = null;
        String idValue = null;
        String userToken = null;
        V2StaffsIdMappingFetchResponse response = api.v2StaffsIdMappingFetch(appToken, orgId, idType, idValue, userToken);

        // TODO: test validations
    }
    
    /**
     * 搜索人员
     *
     * 搜索人员
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void v2StaffsSearchTest() throws ApiException {
        String appToken = null;
        String userId = null;
        V2StaffsSearchRequestBody v2StaffsSearchRequestBody = null;
        String userToken = null;
        V2StaffsSearchResponse response = api.v2StaffsSearch(appToken, userId, v2StaffsSearchRequestBody, userToken);

        // TODO: test validations
    }
    
}
